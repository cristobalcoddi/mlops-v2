name: tf-gha-deploy-infra

on: 
  push:
    paths:
      - '.github/workflows/tf-gha-deploy-infra.yml'
      - '.github/workflows/tf-gha-install-terraform.yml'
      - 'config-infra-prod.yml'
      - 'infrastructure/**'

env:
  config_env: 'none'

jobs:
  get-config:
    uses: Azure/mlops-templates/.github/workflows/read-yaml.yml@main
    with:
      file_name: config-infra-prod.yml

  check-nested-resources:
    needs: get-config
    runs-on: ubuntu-latest
    outputs:
      resources_exist: ${{ steps.check.outputs.resources_exist }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Azure CLI
      uses: azure/setup-azure-cli@v1

    - name: Check if nested resources exist in AML
      id: check
      run: |
        endpoints=$(az ml endpoint list --query "[].name" -o tsv)
        if [[ -n "$endpoints" ]]; then
          echo "resources_exist=true" >> $GITHUB_ENV
        else
          echo "resources_exist=false" >> $GITHUB_ENV
        fi
      env:
        AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

  delete-nested-resources:
    needs: check-nested-resources
    if: needs.check-nested-resources.outputs.resources_exist == 'true'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Azure CLI
      uses: azure/setup-azure-cli@v1

    - name: Delete nested resources in AML
      run: |
        endpoints=$(az ml endpoint list --query "[].name" -o tsv)
        for endpoint in $endpoints; do
          az ml endpoint delete --name $endpoint --yes
        done
      env:
        AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

  test-terraform-state-deployment:
    needs: [get-config, delete-nested-resources]
    uses: ./.github/workflows/tf-gha-install-terraform.yml
    with:
      TFAction: 'apply'
      dply_environment: ${{ needs.set-env-branch.outputs.config-file }} 
      location: ${{ needs.get-config.outputs.location }}
      namespace: ${{ needs.get-config.outputs.namespace }}
      postfix: ${{ needs.get-config.outputs.postfix }}
      environment: ${{ needs.get-config.outputs.environment }}
      enable_aml_computecluster: ${{ needs.get-config.outputs.enable_aml_computecluster == true }} ## TBD review the evaluation of boolean
      enable_monitoring: ${{ needs.get-config.outputs.enable_monitoring == true  }} ## TBD review the evaluation of boolean
      terraform_version: ${{ needs.get-config.outputs.terraform_version }}
      terraform_workingdir: ${{ needs.get-config.outputs.terraform_workingdir }}
      terraform_st_location: ${{ needs.get-config.outputs.terraform_st_location }}
      terraform_st_storage_account: ${{ needs.get-config.outputs.terraform_st_storage_account }}
      terraform_st_resource_group: ${{ needs.get-config.outputs.terraform_st_resource_group }}
      terraform_st_container_name: ${{ needs.get-config.outputs.terraform_st_container_name }}
      terraform_st_key: ${{ needs.get-config.outputs.terraform_st_key }}
      terraform_plan_location: ${{ needs.get-config.outputs.location }}
      terraform_plan_vnet: "TBD" # TBD
    secrets:
      azure_creds: ${{ secrets.AZURE_CREDENTIALS }}
      clientId: ${{ secrets.ARM_CLIENT_ID }}
      clientSecret: ${{ secrets.ARM_CLIENT_SECRET }}
      subscriptionId: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      tenantId: ${{ secrets.ARM_TENANT_ID }}

  deploy-azureml-resources:
    runs-on: ubuntu-latest
    steps:
    - id: deploy-aml-workspace
      name: deploy-aml-workspace
      run: echo "OK"
